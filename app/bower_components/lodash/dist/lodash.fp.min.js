!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.fp=e():t.fp=e()}(this,function(){return function(t){function e(n){if(r[n])return r[n].exports;var a=r[n]={exports:{},id:n,loaded:!1};return t[n].call(a.exports,a,a.exports,e),a.loaded=!0,a.exports}var r={};return e.m=t,e.c=r,e.p="",e(0)}([function(t,e,r){function n(t,e){return a(t,t,e)}var a=r(1);"function"==typeof _&&(_=n(_.runInContext())),
t.exports=n},function(t,e,r){function n(t,e,r,s){var u,p="function"==typeof e,l=e===Object(e);if(l&&(s=r,r=e,e=void 0),null==r)throw new TypeError;s||(s={});var c={cap:"cap"in s?s.cap:!0,curry:"curry"in s?s.curry:!0,fixed:"fixed"in s?s.fixed:!0,immutable:"immutable"in s?s.immutable:!0,rearg:"rearg"in s?s.rearg:!0},d="rearg"in s&&s.rearg,h=p?r:o,f=p?r.runInContext():void 0,y=p?r:{ary:t.ary,assign:t.assign,clone:t.clone,curry:t.curry,forEach:t.forEach,isArray:t.isArray,isFunction:t.isFunction,iteratee:t.iteratee,
keys:t.keys,rearg:t.rearg,spread:t.spread,toPath:t.toPath},g=y.ary,m=y.assign,v=y.clone,W=y.curry,x=y.forEach,R=y.isArray,I=y.isFunction,b=y.keys,A=y.rearg,O=y.spread,E=y.toPath,k=b(a.aryMethod),B=function(t,e){return 2==e?function(e,r){return t.apply(void 0,arguments)}:function(e){return t.apply(void 0,arguments)}},j=function(t,e){return 2==e?function(e,r){return t(e,r)}:function(e){return t(e)}},C=function(t){for(var e=t?t.length:0,r=Array(e);e--;)r[e]=t[e];return r},M=function(t,e){e=E(e);for(var r=-1,n=e.length,a=v(Object(t)),i=a;null!=i&&++r<n;){
var o=e[r],s=i[o];null!=s&&(i[o]=v(Object(s))),i=i[o]}return a},w=function(t){return F.runInContext.convert(t)()},q=function(t){return function(e){return t({},e)}},P=function(t,e){return function(){var r=arguments.length;if(!r)return a;for(var n=Array(r);r--;)n[r]=arguments[r];var a=n[0]=e.apply(void 0,n);return t.apply(void 0,n),a}},S=function(t,e){return K(t,function(t){return"function"==typeof t?j(t,e):t})},z=function(t,e){return K(t,function(t){var r=e.length;return B(A(j(t,r),e),r)})},K=function(t,e,r){
return function(){var r=arguments.length;if(!r)return t();for(var n=Array(r);r--;)n[r]=arguments[r];var a=c.rearg?0:r-1;return n[a]=e(n[a]),t.apply(void 0,n)}},L={castArray:function(t){return function(){var e=arguments[0];return R(e)?t(C(e)):t.apply(void 0,arguments)}},iteratee:function(t){return function(){var e=arguments[0],r=arguments[1],n=t(e,r),a=n.length;return c.cap&&"number"==typeof r?(r=r>2?r-2:1,a&&r>=a?n:j(n,r)):n}},mixin:function(t){return function(e){var r=this;if(!I(r))return t(r,Object(e));
var n=[],a=[];return x(b(e),function(t){var i=e[t];I(i)&&(a.push(t),n.push(r.prototype[t]))}),t(r,Object(e)),x(a,function(t,e){var a=n[e];I(a)?r.prototype[t]=a:delete r.prototype[t]}),r}},runInContext:function(e){return function(r){return n(t,e(r),s)}}},D=function(t,e){t=a.aliasToReal[t]||t;var r=L[t],o=function(r){var a=p?f:y,i=p?f[t]:e,o=m(m({},c),r);return n(a,t,i,o)};if(r){var s=r(e);return s.convert=o,s}var l=e;return c.immutable&&(i.array[t]?l=P(e,C):i.object[t]?l=P(e,q(e)):i.set[t]&&(l=P(e,M))),
x(k,function(e){return x(a.aryMethod[e],function(r){if(t==r){var n=!p&&a.iterateeAry[t],i=a.iterateeRearg[t],o=a.methodSpread[t];return s=l,c.fixed&&(s=void 0===o?g(s,e):O(s,o)),c.rearg&&e>1&&(d||!a.skipRearg[t])&&(s=A(s,a.methodRearg[t]||a.aryRearg[e])),c.cap&&(i?s=z(s,i):n&&(s=S(s,n))),c.curry&&e>1&&(s=W(s,e)),!1}}),!s}),s||(s=l),s==e&&(s=function(){return e.apply(this,arguments)}),s.convert=o,a.placeholder[t]&&(u=!0,s.placeholder=e.placeholder=h),s};if(!l)return D(e,r);var F=r,T=[];return x(k,function(t){
x(a.aryMethod[t],function(t){var e=F[a.remap[t]||t];e&&T.push([t,D(t,e)])})}),x(T,function(t){F[t[0]]=t[1]}),F.convert=w,u&&(F.placeholder=h),x(b(F),function(t){x(a.realToAlias[t]||[],function(e){F[e]=F[t]})}),F}var a=r(2),i=a.mutate,o={};t.exports=n},function(t,e){e.aliasToReal={each:"forEach",eachRight:"forEachRight",entries:"toPairs",entriesIn:"toPairsIn",extend:"assignIn",extendWith:"assignInWith",first:"head",__:"placeholder",all:"every",allPass:"overEvery",always:"constant",any:"some",anyPass:"overSome",
apply:"spread",assoc:"set",assocPath:"set",complement:"negate",compose:"flowRight",contains:"includes",dissoc:"unset",dissocPath:"unset",equals:"isEqual",identical:"eq",init:"initial",invertObj:"invert",juxt:"over",mapObj:"mapValues",omitAll:"omit",nAry:"ary",path:"get",pathEq:"matchesProperty",pathOr:"getOr",pickAll:"pick",pipe:"flow",prop:"get",propOf:"propertyOf",propOr:"getOr",unapply:"rest",unnest:"flatten",useWith:"overArgs",whereEq:"filter",zipObj:"zipObject"},e.aryMethod={1:["attempt","castArray","ceil","create","curry","curryRight","floor","fromPairs","invert","iteratee","memoize","method","methodOf","mixin","over","overEvery","overSome","rest","reverse","round","runInContext","spread","template","trim","trimEnd","trimStart","uniqueId","words"],
2:["add","after","ary","assign","assignIn","at","before","bind","bindAll","bindKey","chunk","cloneDeepWith","cloneWith","concat","countBy","curryN","curryRightN","debounce","defaults","defaultsDeep","delay","difference","divide","drop","dropRight","dropRightWhile","dropWhile","endsWith","eq","every","filter","find","find","findIndex","findKey","findLast","findLastIndex","findLastKey","flatMap","flatMapDeep","flattenDepth","forEach","forEachRight","forIn","forInRight","forOwn","forOwnRight","get","groupBy","gt","gte","has","hasIn","includes","indexOf","intersection","invertBy","invoke","invokeMap","isEqual","isMatch","join","keyBy","lastIndexOf","lt","lte","map","mapKeys","mapValues","matchesProperty","maxBy","meanBy","merge","minBy","multiply","omit","omitBy","overArgs","pad","padEnd","padStart","parseInt","partial","partialRight","partition","pick","pickBy","pull","pullAll","pullAt","random","range","rangeRight","rearg","reject","remove","repeat","restFrom","result","sampleSize","some","sortBy","sortedIndex","sortedIndexOf","sortedLastIndex","sortedLastIndexOf","sortedUniqBy","split","spreadFrom","startsWith","subtract","sumBy","take","takeRight","takeRightWhile","takeWhile","tap","throttle","thru","times","trimChars","trimCharsEnd","trimCharsStart","truncate","union","uniqBy","uniqWith","unset","unzipWith","without","wrap","xor","zip","zipObject","zipObjectDeep"],
3:["assignInWith","assignWith","clamp","differenceBy","differenceWith","getOr","inRange","intersectionBy","intersectionWith","invokeArgs","invokeArgsMap","isEqualWith","isMatchWith","flatMapDepth","mergeWith","orderBy","padChars","padCharsEnd","padCharsStart","pullAllBy","pullAllWith","reduce","reduceRight","replace","set","slice","sortedIndexBy","sortedLastIndexBy","transform","unionBy","unionWith","update","xorBy","xorWith","zipWith"],4:["fill","setWith","updateWith"]},e.aryRearg={2:[1,0],3:[2,0,1],
4:[3,2,0,1]},e.iterateeAry={dropRightWhile:1,dropWhile:1,every:1,filter:1,find:1,findIndex:1,findKey:1,findLast:1,findLastIndex:1,findLastKey:1,flatMap:1,flatMapDeep:1,flatMapDepth:1,forEach:1,forEachRight:1,forIn:1,forInRight:1,forOwn:1,forOwnRight:1,map:1,mapKeys:1,mapValues:1,partition:1,reduce:2,reduceRight:2,reject:1,remove:1,some:1,takeRightWhile:1,takeWhile:1,times:1,transform:2},e.iterateeRearg={mapKeys:[1]},e.methodRearg={assignInWith:[1,2,0],assignWith:[1,2,0],getOr:[2,1,0],isEqualWith:[1,2,0],
isMatchWith:[2,1,0],mergeWith:[1,2,0],padChars:[2,1,0],padCharsEnd:[2,1,0],padCharsStart:[2,1,0],pullAllBy:[2,1,0],pullAllWith:[2,1,0],setWith:[3,1,2,0],sortedIndexBy:[2,1,0],sortedLastIndexBy:[2,1,0],updateWith:[3,1,2,0],zipWith:[1,2,0]},e.methodSpread={invokeArgs:2,invokeArgsMap:2,partial:1,partialRight:1,without:1},e.mutate={array:{fill:!0,pull:!0,pullAll:!0,pullAllBy:!0,pullAllWith:!0,pullAt:!0,remove:!0,reverse:!0},object:{assign:!0,assignIn:!0,assignInWith:!0,assignWith:!0,defaults:!0,defaultsDeep:!0,
merge:!0,mergeWith:!0},set:{set:!0,setWith:!0,unset:!0,update:!0,updateWith:!0}},e.placeholder={bind:!0,bindKey:!0,curry:!0,curryRight:!0,partial:!0,partialRight:!0},e.realToAlias=function(){var t=Object.prototype.hasOwnProperty,r=e.aliasToReal,n={};for(var a in r){var i=r[a];t.call(n,i)?n[i].push(a):n[i]=[a]}return n}(),e.remap={curryN:"curry",curryRightN:"curryRight",getOr:"get",invokeArgs:"invoke",invokeArgsMap:"invokeMap",padChars:"pad",padCharsEnd:"padEnd",padCharsStart:"padStart",restFrom:"rest",
spreadFrom:"spread",trimChars:"trim",trimCharsEnd:"trimEnd",trimCharsStart:"trimStart"},e.skipRearg={add:!0,assign:!0,assignIn:!0,bind:!0,bindKey:!0,concat:!0,difference:!0,divide:!0,eq:!0,gt:!0,gte:!0,isEqual:!0,lt:!0,lte:!0,matchesProperty:!0,merge:!0,multiply:!0,partial:!0,partialRight:!0,random:!0,range:!0,rangeRight:!0,subtract:!0,without:!0,zip:!0,zipObject:!0}}])});